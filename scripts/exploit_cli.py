#!/usr/bin/env python3
# Command-line entry point for running prompt-injection exploits against one or more chatbots.

import argparse
from exploit.exploit import Exploit
from crawler.crawler import ChatbotCrawler
from exploit.exploiter import Exploiter
from exploit.audit import Audit
from db.neo4j_driver import Neo4jDriver

def main():
    # Create arguments
    parser = argparse.ArgumentParser(
        description="Run prompt-injection attack chains against specified chatbot URLs."
    )
    parser.add_argument(
        "--urls",
        nargs="+",
        required=True,
        help="List of chatbot base URLs to target (e.g. http://localhost:5009)"
    )
    parser.add_argument(
        "--temperature",
        type=float,
        default=0.5,
        help="Probability threshold for explorative vs. exploitative modes"
    )
    parser.add_argument(
        "--max-iterations",
        type=int,
        default=10,
        help="Maximum number of attack iterations per bot"
    )
    parser.add_argument(
        "--threshold",
        type=float,
        default=0.5,
        help="Embedding similarity threshold for suggesting next prompt"
    )
    parser.add_argument(
        "--timeout",
        type=float,
        default=30.0,
        help="HTTP request timeout in seconds"
    )

    # Parse Arguments
    args = parser.parse_args()

    # Load dependencies
    crawler = ChatbotCrawler(args.urls)
    exploiter = Exploiter()
    audit = Audit()
    driver = Neo4jDriver()

    # Create Exploit Object
    expl = Exploit(
        urls=args.urls,
        temperature=args.temperature,
        max_iterations=args.max_iterations,
        threshold=args.threshold,
        timeout=args.timeout,
        crawler=crawler,
        exploiter=exploiter,
        audit=audit,
        driver=driver
    )

    # Run Exploit
    results = expl.prompt_attack()

    print("\n=== Attack Summary ===")
    for r in results:
        print(f" • Bot {r['bot_id']}  →  Chain {r['chain_id']}")

if __name__ == "__main__":
    main()
